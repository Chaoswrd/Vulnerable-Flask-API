services:
  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  statsd-exporter:
    image: prom/statsd-exporter
    ports:
      - "9102:9102"
    command:
      - '--statsd.mapping-config=/statsd/statsd.conf'
    volumes:
      - ./statsd-exporter/statsd.conf:/statsd/statsd.conf
  db:
    image: postgres
    volumes:
      - flask_postgresql_vol:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
  flask:
    build:
      context: .
    ports:
    # Host:Container
      - "80:5000"
    environment:
      - FLASK_APP=/app/app.py
      - FLASK_ENV=development
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PYTHONUNBUFFERED=1
    depends_on:
      - db
    volumes:
      - "./flask_web_app:/app"
      - "./migrations:/migrations"
volumes:
  flask_postgresql_vol:
    external: true
# docker compose up && docker exec -it <container_name> /bin/bash
